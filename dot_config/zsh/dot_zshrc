# Initialize Zsh completions
autoload -Uz compinit
compinit

# Eval with existence checks
# Check Homebrew installation
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  echo "[WARN] Homebrew not found at /opt/homebrew/bin/brew" >&2
fi

# Check Starship installation
if command -v starship >/dev/null 2>&1; then
  eval "$(starship init zsh)"
else
  echo "[WARN] Starship not found" >&2
fi

# Check Mise installation
if command -v mise >/dev/null 2>&1; then
  eval "$(mise activate zsh)"
else
  echo "[WARN] Mise not found" >&2
fi

# Check Zoxide installation
if command -v zoxide >/dev/null 2>&1; then
  eval "$(zoxide init zsh)"
else
  echo "[WARN] Zoxide not found" >&2
fi

# Zinit setup (plugin manager)
ZINIT_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/zinit/zinit.git"
[ ! -d "$ZINIT_HOME" ] && mkdir -p "$(dirname "$ZINIT_HOME")"
[ ! -d "$ZINIT_HOME/.git" ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "$ZINIT_HOME/zinit.zsh"

# Prezto module configurations
zstyle ':prezto:module:tmux:auto-start' local 'yes'    # Auto-start tmux
zstyle ':prezto:module:tmux:session' name 'default'    # Default session name
zstyle ':prezto:module:ssh:load' identities 'id_unset' 'id_yena'  # SSH keys
zstyle ':prezto:module:utility:ls' color 'yes'         # Colorized ls

# Load Prezto modules via Zinit
zinit snippet PZTM::environment
zinit snippet PZTM::history
zinit snippet PZTM::directory
zinit snippet PZTM::spectrum
zinit snippet PZTM::gnu-utility
zinit snippet PZTM::utility
zinit snippet PZTM::helper
zinit snippet PZTM::tmux
zinit snippet PZTM::homebrew
zinit snippet PZTM::completion
zinit snippet PZTM::ssh

# Load oh-my-zsh modules via Zinit
zinit snippet OMZP::docker
zinit snippet OMZP::kind
zinit snippet OMZP::kubectl

# Syntax highlighting
zinit light zsh-users/zsh-syntax-highlighting

# Autosuggestions
zinit light zsh-users/zsh-autosuggestions

# History substring search
zinit ice wait lucid atload'__bind_history_keys'
zinit light zsh-users/zsh-history-substring-search

# Key bindings for history search
function __bind_history_keys() {
  bindkey '^[[A' history-substring-search-up    # Up arrow
  bindkey '^[[B' history-substring-search-down  # Down arrow
}
